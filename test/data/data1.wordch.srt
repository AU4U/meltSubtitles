
1
00:00:01,800 --> 00:00:07,703
Welcome to this course on compilers. My
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

2
00:00:07,703 --> 00:00:13,756

3
00:00:13,756 --> 00:00:19,957

4
00:00:19,957 --> 00:00:25,517
programming languages, compilers, and
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters. Now, this class is mostly
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

5
00:00:25,517 --> 00:00:31,754
about compilers. But, I do want to say a
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
few words about interpreters here in the
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

6
00:00:31,754 --> 00:00:36,788
first lecture. So, what does an
an: art. 一（在元音音素前）
interpreter do? Well, I'm gonna draw a
interpreter: n. 解释者；口译者；注释器

7
00:00:36,788 --> 00:00:42,874
picture here, this box is the interpreter,
interpreter: n. 解释者；口译者；注释器

8
00:00:42,874 --> 00:00:50,012

9
00:00:50,012 --> 00:00:56,822

10
00:00:56,822 --> 00:01:01,978

11
00:01:01,978 --> 00:01:07,339
you invoke the interpreter on the data,
invoke: vt. 调用；祈求；引起；恳求
interpreter: n. 解释者；口译者；注释器

12
00:01:07,339 --> 00:01:12,292

13
00:01:12,292 --> 00:01:17,992
interpreter is, is online, meaning it the
interpreter: n. 解释者；口译者；注释器

14
00:01:17,992 --> 00:01:24,119
your program. Now a compiler is structured
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

15
00:01:24,119 --> 00:01:31,530
the compiler, And the compiler takes as
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

16
00:01:31,530 --> 00:01:39,035
produces an executable. And this
an: art. 一（在元音音素前）
executable: adj. 可执行的；可实行的

17
00:01:39,035 --> 00:01:45,175
executable is another program, might be
executable: adj. 可执行的；可实行的
assembly language, it might be bytecode.
bytecode: n. 字节码，字节代码；位元码

18
00:01:45,402 --> 00:01:51,770

19
00:01:51,770 --> 00:02:02,948
be run separately on your data. And that
separately: adv. 分别地；分离地；个别地

20
00:02:02,948 --> 00:02:11,677
this structure the compiler is offline,
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者
offline: adj. （计算机）未联网的；脱机的，离线的，未连线的
Meaning that we pre-process the program
pre: abbr. 炼油工程师（Petroleum Refining Engineer）

21
00:02:11,677 --> 00:02:16,348
first. The compiler is essentially a
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者
pre-processing step that produces the
pre: abbr. 炼油工程师（Petroleum Refining Engineer）

22
00:02:16,348 --> 00:02:21,572
executable, and then we can run that same
executable: adj. 可执行的；可实行的
executable on many, many different inputs,
executable: adj. 可执行的；可实行的

23
00:02:21,572 --> 00:02:27,042
to recompile or do any other processing of
recompile: v. 重新编译

24
00:02:27,042 --> 00:02:32,358

25
00:02:32,358 --> 00:02:36,947
compilers and interpreters were first
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

26
00:02:36,947 --> 00:02:41,778
1950s and in particular with a machine

27
00:02:41,778 --> 00:02:46,225
their first commercially successful
commercially: adv. 商业上；通商上

28
00:02:46,225 --> 00:02:51,525

29
00:02:51,525 --> 00:02:56,765
704 well, once customers started buying it

30
00:02:56,765 --> 00:03:01,578

31
00:03:01,578 --> 00:03:06,830

32
00:03:06,830 --> 00:03:12,295

33
00:03:12,295 --> 00:03:17,572

34
00:03:17,572 --> 00:03:22,533

35
00:03:22,533 --> 00:03:28,287

36
00:03:28,287 --> 00:03:36,588

37
00:03:36,588 --> 00:03:41,915

38
00:03:41,915 --> 00:03:46,956
we call today, an early example of an
an: art. 一（在元音音素前）
an: art. 一（在元音音素前）

39
00:03:46,956 --> 00:03:52,336
interpreter. And like all interpreters, it
interpreter: n. 解释者；口译者；注释器
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）
had some advantages and disadvantages. The
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）

40
00:03:52,336 --> 00:03:57,340

41
00:03:57,340 --> 00:04:01,782
in that sense, the programmer was much
programmer: n. [自][计] 程序设计员

42
00:04:01,782 --> 00:04:07,100
disadvantages, code written, speed code
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）

43
00:04:07,100 --> 00:04:12,208
Then handwritten programs and that's also
handwritten: adj. 手写的
true of interpreted programs today. So if
true: adj. 真实的；正确的

44
00:04:12,208 --> 00:04:16,948
you have an implementation that uses an
an: art. 一（在元音音素前）
an: art. 一（在元音音素前）
interpreter, they're going to be much
interpreter: n. 解释者；口译者；注释器

45
00:04:16,948 --> 00:04:22,119
slower than either a compiler or writing
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

46
00:04:22,119 --> 00:04:27,228
interpreter took up, 300 bytes of memory.
interpreter: n. 解释者；口译者；注释器
bytes: n. [计] 字节；位元组，字节数（byte的复数）

47
00:04:27,228 --> 00:04:32,336
fact, 300 bytes, today, would seem like an
bytes: n. [计] 字节；位元组，字节数（byte的复数）
an: art. 一（在元音音素前）

48
00:04:32,336 --> 00:04:38,854

49
00:04:38,854 --> 00:04:41,270
machine. So this was 30 percent of the
percent: n. 百分比，百分率；部分；百分数

50
00:04:41,270 --> 00:04:46,780
amount of space that the interpreter took
interpreter: n. 解释者；口译者；注释器

51
00:04:46,780 --> 00:04:51,803

52
00:04:51,803 --> 00:04:56,889

53
00:04:56,889 --> 00:05:02,103
scientific computations, and programmers
computations: n. [数] 计算；计算指令（computation的复数形式）
programmers: n. 程序员（programmer的复数）

54
00:05:02,103 --> 00:05:07,267

55
00:05:07,267 --> 00:05:12,383

56
00:05:12,383 --> 00:05:17,718

57
00:05:17,718 --> 00:05:25,044
allowing the programmer to write the, the,
programmer: n. [自][计] 程序设计员

58
00:05:25,044 --> 00:05:32,739

59
00:05:32,739 --> 00:05:39,426
1957, And interestingly, they thought it

60
00:05:39,426 --> 00:05:45,615
compiler but it would end up taking three.
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

61
00:05:45,615 --> 00:05:51,659

62
00:05:51,659 --> 00:05:57,047
project. By 1958, over 50 percent of all
percent: n. 百分比，百分率；部分；百分数

63
00:05:57,047 --> 00:06:02,533
code was written in FORTRAN. So 50 percent
percent: n. 百分比，百分率；部分；百分数

64
00:06:02,533 --> 00:06:07,497

65
00:06:07,497 --> 00:06:12,649
they were ecstatic, And everybody thought
ecstatic: adj. 狂喜的；入迷的

66
00:06:12,649 --> 00:06:16,984
abstraction, improved programmer
abstraction: n. 抽象；提取；抽象概念；空想；心不在焉
programmer: n. [自][计] 程序设计员

67
00:06:16,984 --> 00:06:23,484

68
00:06:23,484 --> 00:06:28,702

69
00:06:28,702 --> 00:06:33,736
an enormous body of theoretical work. And
an: art. 一（在元音音素前）

70
00:06:33,736 --> 00:06:38,279

71
00:06:38,279 --> 00:06:42,527

72
00:06:42,527 --> 00:06:47,095

73
00:06:47,095 --> 00:06:51,274

74
00:06:51,274 --> 00:06:55,620

75
00:06:55,620 --> 00:07:00,021
involves a very subtle and fruitful
fruitful: adj. 富有成效的；多产的；果实结得多的

76
00:07:00,021 --> 00:07:04,701

77
00:07:04,701 --> 00:07:09,797

78
00:07:09,797 --> 00:07:15,591
the development of, practical compilers.
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

79
00:07:15,591 --> 00:07:21,313
profound, that today, auto compilers still
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

80
00:07:21,313 --> 00:07:28,115

81
00:07:28,115 --> 00:07:33,874
Well it consists five phases lexical
lexical: adj. 词汇的；[语] 词典的；词典编纂的
analysis and parsing, which together take
parsing: n. 语法分析；剖析

82
00:07:33,874 --> 00:07:39,065
care of the syntactic aspects of the
syntactic: adj. 句法的；语法的；依据造句法的
language, semantic analysis, which, of
semantic: adj. 语义的；语义学的（等于semantical）

83
00:07:39,065 --> 00:07:44,113
course, takes care of more semantic
semantic: adj. 语义的；语义学的（等于semantical）

84
00:07:44,113 --> 00:07:50,108

85
00:07:50,108 --> 00:07:55,515

86
00:07:55,515 --> 00:08:00,923

87
00:08:00,923 --> 00:08:06,125

88
00:08:06,125 --> 00:08:11,327

89
00:08:11,327 --> 00:08:16,871

90
00:08:16,871 --> 00:08:18,720

1
00:00:01,800 --> 00:00:07,703
Welcome to this course on compilers. My
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

2
00:00:07,703 --> 00:00:13,756

3
00:00:13,756 --> 00:00:19,957

4
00:00:19,957 --> 00:00:25,517
programming languages, compilers, and
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters. Now, this class is mostly
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

5
00:00:25,517 --> 00:00:31,754
about compilers. But, I do want to say a
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
few words about interpreters here in the
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

6
00:00:31,754 --> 00:00:36,788
first lecture. So, what does an
an: art. 一（在元音音素前）
interpreter do? Well, I'm gonna draw a
interpreter: n. 解释者；口译者；注释器

7
00:00:36,788 --> 00:00:42,874
picture here, this box is the interpreter,
interpreter: n. 解释者；口译者；注释器

8
00:00:42,874 --> 00:00:50,012

9
00:00:50,012 --> 00:00:56,822

10
00:00:56,822 --> 00:01:01,978

11
00:01:01,978 --> 00:01:07,339
you invoke the interpreter on the data,
invoke: vt. 调用；祈求；引起；恳求
interpreter: n. 解释者；口译者；注释器

12
00:01:07,339 --> 00:01:12,292

13
00:01:12,292 --> 00:01:17,992
interpreter is, is online, meaning it the
interpreter: n. 解释者；口译者；注释器

14
00:01:17,992 --> 00:01:24,119
your program. Now a compiler is structured
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

15
00:01:24,119 --> 00:01:31,530
the compiler, And the compiler takes as
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

16
00:01:31,530 --> 00:01:39,035
produces an executable. And this
an: art. 一（在元音音素前）
executable: adj. 可执行的；可实行的

17
00:01:39,035 --> 00:01:45,175
executable is another program, might be
executable: adj. 可执行的；可实行的
assembly language, it might be bytecode.
bytecode: n. 字节码，字节代码；位元码

18
00:01:45,402 --> 00:01:51,770

19
00:01:51,770 --> 00:02:02,948
be run separately on your data. And that
separately: adv. 分别地；分离地；个别地

20
00:02:02,948 --> 00:02:11,677
this structure the compiler is offline,
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者
offline: adj. （计算机）未联网的；脱机的，离线的，未连线的
Meaning that we pre-process the program
pre: abbr. 炼油工程师（Petroleum Refining Engineer）

21
00:02:11,677 --> 00:02:16,348
first. The compiler is essentially a
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者
pre-processing step that produces the
pre: abbr. 炼油工程师（Petroleum Refining Engineer）

22
00:02:16,348 --> 00:02:21,572
executable, and then we can run that same
executable: adj. 可执行的；可实行的
executable on many, many different inputs,
executable: adj. 可执行的；可实行的

23
00:02:21,572 --> 00:02:27,042
to recompile or do any other processing of
recompile: v. 重新编译

24
00:02:27,042 --> 00:02:32,358

25
00:02:32,358 --> 00:02:36,947
compilers and interpreters were first
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

26
00:02:36,947 --> 00:02:41,778
1950s and in particular with a machine

27
00:02:41,778 --> 00:02:46,225
their first commercially successful
commercially: adv. 商业上；通商上

28
00:02:46,225 --> 00:02:51,525

29
00:02:51,525 --> 00:02:56,765
704 well, once customers started buying it

30
00:02:56,765 --> 00:03:01,578

31
00:03:01,578 --> 00:03:06,830

32
00:03:06,830 --> 00:03:12,295

33
00:03:12,295 --> 00:03:17,572

34
00:03:17,572 --> 00:03:22,533

35
00:03:22,533 --> 00:03:28,287

36
00:03:28,287 --> 00:03:36,588

37
00:03:36,588 --> 00:03:41,915

38
00:03:41,915 --> 00:03:46,956
we call today, an early example of an
an: art. 一（在元音音素前）
an: art. 一（在元音音素前）

39
00:03:46,956 --> 00:03:52,336
interpreter. And like all interpreters, it
interpreter: n. 解释者；口译者；注释器
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）
had some advantages and disadvantages. The
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）

40
00:03:52,336 --> 00:03:57,340

41
00:03:57,340 --> 00:04:01,782
in that sense, the programmer was much
programmer: n. [自][计] 程序设计员

42
00:04:01,782 --> 00:04:07,100
disadvantages, code written, speed code
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）

43
00:04:07,100 --> 00:04:12,208
Then handwritten programs and that's also
handwritten: adj. 手写的
true of interpreted programs today. So if
true: adj. 真实的；正确的

44
00:04:12,208 --> 00:04:16,948
you have an implementation that uses an
an: art. 一（在元音音素前）
an: art. 一（在元音音素前）
interpreter, they're going to be much
interpreter: n. 解释者；口译者；注释器

45
00:04:16,948 --> 00:04:22,119
slower than either a compiler or writing
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

46
00:04:22,119 --> 00:04:27,228
interpreter took up, 300 bytes of memory.
interpreter: n. 解释者；口译者；注释器
bytes: n. [计] 字节；位元组，字节数（byte的复数）

47
00:04:27,228 --> 00:04:32,336
fact, 300 bytes, today, would seem like an
bytes: n. [计] 字节；位元组，字节数（byte的复数）
an: art. 一（在元音音素前）

48
00:04:32,336 --> 00:04:38,854

49
00:04:38,854 --> 00:04:41,270
machine. So this was 30 percent of the
percent: n. 百分比，百分率；部分；百分数

50
00:04:41,270 --> 00:04:46,780
amount of space that the interpreter took
interpreter: n. 解释者；口译者；注释器

51
00:04:46,780 --> 00:04:51,803

52
00:04:51,803 --> 00:04:56,889

53
00:04:56,889 --> 00:05:02,103
scientific computations, and programmers
computations: n. [数] 计算；计算指令（computation的复数形式）
programmers: n. 程序员（programmer的复数）

54
00:05:02,103 --> 00:05:07,267

55
00:05:07,267 --> 00:05:12,383

56
00:05:12,383 --> 00:05:17,718

57
00:05:17,718 --> 00:05:25,044
allowing the programmer to write the, the,
programmer: n. [自][计] 程序设计员

58
00:05:25,044 --> 00:05:32,739

59
00:05:32,739 --> 00:05:39,426
1957, And interestingly, they thought it

60
00:05:39,426 --> 00:05:45,615
compiler but it would end up taking three.
compiler: n. 编译器；[计] 编译程序；编辑者，汇编者

61
00:05:45,615 --> 00:05:51,659

62
00:05:51,659 --> 00:05:57,047
project. By 1958, over 50 percent of all
percent: n. 百分比，百分率；部分；百分数

63
00:05:57,047 --> 00:06:02,533
code was written in FORTRAN. So 50 percent
percent: n. 百分比，百分率；部分；百分数

64
00:06:02,533 --> 00:06:07,497

65
00:06:07,497 --> 00:06:12,649
they were ecstatic, And everybody thought
ecstatic: adj. 狂喜的；入迷的

66
00:06:12,649 --> 00:06:16,984
abstraction, improved programmer
abstraction: n. 抽象；提取；抽象概念；空想；心不在焉
programmer: n. [自][计] 程序设计员

67
00:06:16,984 --> 00:06:23,484

68
00:06:23,484 --> 00:06:28,702

69
00:06:28,702 --> 00:06:33,736
an enormous body of theoretical work. And
an: art. 一（在元音音素前）

70
00:06:33,736 --> 00:06:38,279

71
00:06:38,279 --> 00:06:42,527

72
00:06:42,527 --> 00:06:47,095

73
00:06:47,095 --> 00:06:51,274

74
00:06:51,274 --> 00:06:55,620

75
00:06:55,620 --> 00:07:00,021
involves a very subtle and fruitful
fruitful: adj. 富有成效的；多产的；果实结得多的

76
00:07:00,021 --> 00:07:04,701

77
00:07:04,701 --> 00:07:09,797

78
00:07:09,797 --> 00:07:15,591
the development of, practical compilers.
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

79
00:07:15,591 --> 00:07:21,313
profound, that today, auto compilers still
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

80
00:07:21,313 --> 00:07:28,115

81
00:07:28,115 --> 00:07:33,874
Well it consists five phases lexical
lexical: adj. 词汇的；[语] 词典的；词典编纂的
analysis and parsing, which together take
parsing: n. 语法分析；剖析

82
00:07:33,874 --> 00:07:39,065
care of the syntactic aspects of the
syntactic: adj. 句法的；语法的；依据造句法的
language, semantic analysis, which, of
semantic: adj. 语义的；语义学的（等于semantical）

83
00:07:39,065 --> 00:07:44,113
course, takes care of more semantic
semantic: adj. 语义的；语义学的（等于semantical）

84
00:07:44,113 --> 00:07:50,108

85
00:07:50,108 --> 00:07:55,515

86
00:07:55,515 --> 00:08:00,923

87
00:08:00,923 --> 00:08:06,125

88
00:08:06,125 --> 00:08:11,327

89
00:08:11,327 --> 00:08:16,871

90
00:08:16,871 --> 00:08:18,720

1
00:00:01,800 --> 00:00:07,703
Welcome to this course on compilers. My
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

2
00:00:07,703 --> 00:00:13,756

3
00:00:13,756 --> 00:00:19,957

4
00:00:19,957 --> 00:00:25,517
programming languages, compilers, and
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters. Now, this class is mostly
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

5
00:00:25,517 --> 00:00:31,754
about compilers. But, I do want to say a
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
few words about interpreters here in the
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

6
00:00:31,754 --> 00:00:36,788
interpreter do? Well, I'm gonna draw a
interpreter: n. 解释者；口译者；注释器

7
00:00:36,788 --> 00:00:42,874
picture here, this box is the interpreter,
interpreter: n. 解释者；口译者；注释器

8
00:00:42,874 --> 00:00:50,012

9
00:00:50,012 --> 00:00:56,822

10
00:00:56,822 --> 00:01:01,978
program before it executes it on the
executes: 执行（法令）

11
00:01:01,978 --> 00:01:07,339
you invoke the interpreter on the data,
invoke: vt. 调用；祈求；引起；恳求
interpreter: n. 解释者；口译者；注释器

12
00:01:07,339 --> 00:01:12,292

13
00:01:12,292 --> 00:01:17,992
interpreter is, is online, meaning it the
interpreter: n. 解释者；口译者；注释器

14
00:01:17,992 --> 00:01:24,119

15
00:01:24,119 --> 00:01:31,530

16
00:01:31,530 --> 00:01:39,035
produces an executable. And this
executable: adj. 可执行的；可实行的

17
00:01:39,035 --> 00:01:45,175
executable is another program, might be
executable: adj. 可执行的；可实行的
assembly language, it might be bytecode.
bytecode: n. 字节码，字节代码；位元码

18
00:01:45,402 --> 00:01:51,770

19
00:01:51,770 --> 00:02:02,948

20
00:02:02,948 --> 00:02:11,677

21
00:02:11,677 --> 00:02:16,348

22
00:02:16,348 --> 00:02:21,572
executable, and then we can run that same
executable: adj. 可执行的；可实行的
executable on many, many different inputs,
executable: adj. 可执行的；可实行的

23
00:02:21,572 --> 00:02:27,042
to recompile or do any other processing of
recompile: v. 重新编译

24
00:02:27,042 --> 00:02:32,358

25
00:02:32,358 --> 00:02:36,947
compilers and interpreters were first
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

26
00:02:36,947 --> 00:02:41,778
1950s and in particular with a machine

27
00:02:41,778 --> 00:02:46,225
their first commercially successful
commercially: adv. 商业上；通商上

28
00:02:46,225 --> 00:02:51,525

29
00:02:51,525 --> 00:02:56,765
704 well, once customers started buying it

30
00:02:56,765 --> 00:03:01,578
software costs exceeded the hardware
exceeded: adj. 非常的；过度的；溢出的

31
00:03:01,578 --> 00:03:06,830

32
00:03:06,830 --> 00:03:12,295

33
00:03:12,295 --> 00:03:17,572

34
00:03:17,572 --> 00:03:22,533

35
00:03:22,533 --> 00:03:28,287

36
00:03:28,287 --> 00:03:36,588

37
00:03:36,588 --> 00:03:41,915

38
00:03:41,915 --> 00:03:46,956

39
00:03:46,956 --> 00:03:52,336
interpreter. And like all interpreters, it
interpreter: n. 解释者；口译者；注释器
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）
had some advantages and disadvantages. The
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）

40
00:03:52,336 --> 00:03:57,340

41
00:03:57,340 --> 00:04:01,782

42
00:04:01,782 --> 00:04:07,100
disadvantages, code written, speed code
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）
programs were ten to twenty times slower.
slower: adj. 较慢的；慢一点的（slow的比较级）

43
00:04:07,100 --> 00:04:12,208
Then handwritten programs and that's also
handwritten: adj. 手写的

44
00:04:12,208 --> 00:04:16,948
interpreter, they're going to be much
interpreter: n. 解释者；口译者；注释器

45
00:04:16,948 --> 00:04:22,119
slower than either a compiler or writing
slower: adj. 较慢的；慢一点的（slow的比较级）

46
00:04:22,119 --> 00:04:27,228
interpreter took up, 300 bytes of memory.
interpreter: n. 解释者；口译者；注释器

47
00:04:27,228 --> 00:04:32,336
incredibly tiny, program. But in those
incredibly: adv. 难以置信地；非常地

48
00:04:32,336 --> 00:04:38,854

49
00:04:38,854 --> 00:04:41,270

50
00:04:41,270 --> 00:04:46,780
amount of space that the interpreter took
interpreter: n. 解释者；口译者；注释器

51
00:04:46,780 --> 00:04:51,803

52
00:04:51,803 --> 00:04:56,889

53
00:04:56,889 --> 00:05:02,103
scientific computations, and programmers
computations: n. [数] 计算；计算指令（computation的复数形式）
thought in terms of writing down formulas
formulas: n. [数] 公式；配方；规则（formula的复数）

54
00:05:02,103 --> 00:05:07,267

55
00:05:07,267 --> 00:05:12,383
coding was that the formulas were in fact
formulas: n. [数] 公式；配方；规则（formula的复数）

56
00:05:12,383 --> 00:05:17,718
formulas were translated in to a form that
formulas: n. [数] 公式；配方；规则（formula的复数）

57
00:05:17,718 --> 00:05:25,044

58
00:05:25,044 --> 00:05:32,739

59
00:05:32,739 --> 00:05:39,426
1957, And interestingly, they thought it

60
00:05:39,426 --> 00:05:45,615

61
00:05:45,615 --> 00:05:51,659
at predicting how long software projects
predicting: v. 预测（predict的ing形式）；预报；预言

62
00:05:51,659 --> 00:05:57,047

63
00:05:57,047 --> 00:06:02,533

64
00:06:02,533 --> 00:06:07,497

65
00:06:07,497 --> 00:06:12,649
they were ecstatic, And everybody thought
ecstatic: adj. 狂喜的；入迷的

66
00:06:12,649 --> 00:06:16,984
abstraction, improved programmer
abstraction: n. 抽象；提取；抽象概念；空想；心不在焉

67
00:06:16,984 --> 00:06:23,484

68
00:06:23,484 --> 00:06:28,702

69
00:06:28,702 --> 00:06:33,736

70
00:06:33,736 --> 00:06:38,279

71
00:06:38,279 --> 00:06:42,527

72
00:06:42,527 --> 00:06:47,095
without having both a, a very good grasp
grasp: v. 抓牢，握紧；试图抓住；理解，领悟；毫不犹豫地抓住（机会）

73
00:06:47,095 --> 00:06:51,274

74
00:06:51,274 --> 00:06:55,620

75
00:06:55,620 --> 00:07:00,021
involves a very subtle and fruitful
fruitful: adj. 富有成效的；多产的；果实结得多的

76
00:07:00,021 --> 00:07:04,701

77
00:07:04,701 --> 00:07:09,797

78
00:07:09,797 --> 00:07:15,591
the development of, practical compilers.
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

79
00:07:15,591 --> 00:07:21,313
profound, that today, auto compilers still
profound: adj. 深厚的；意义深远的；渊博的
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

80
00:07:21,313 --> 00:07:28,115
preserve the outlines of FORTRAN one. So
outlines: n. 轮廓；概要（outline的复数）；大概描述

81
00:07:28,115 --> 00:07:33,874
Well it consists five phases lexical
lexical: adj. 词汇的；[语] 词典的；词典编纂的
analysis and parsing, which together take
parsing: n. 语法分析；剖析

82
00:07:33,874 --> 00:07:39,065
care of the syntactic aspects of the
syntactic: adj. 句法的；语法的；依据造句法的
language, semantic analysis, which, of
semantic: adj. 语义的；语义学的（等于semantical）

83
00:07:39,065 --> 00:07:44,113
course, takes care of more semantic
semantic: adj. 语义的；语义学的（等于semantical）

84
00:07:44,113 --> 00:07:50,108
of transformations on the program to
transformations: n. [晶体] 转变（transformation的复数形式）；转换

85
00:07:50,108 --> 00:07:55,515

86
00:07:55,515 --> 00:08:00,923

87
00:08:00,923 --> 00:08:06,125

88
00:08:06,125 --> 00:08:11,327

89
00:08:11,327 --> 00:08:16,871

90
00:08:16,871 --> 00:08:18,720

1
00:00:01,800 --> 00:00:07,703
Welcome to this course on compilers. My
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

2
00:00:07,703 --> 00:00:13,756

3
00:00:13,756 --> 00:00:19,957

4
00:00:19,957 --> 00:00:25,517
programming languages, compilers, and
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters. Now, this class is mostly
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

5
00:00:25,517 --> 00:00:31,754
about compilers. But, I do want to say a
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
few words about interpreters here in the
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

6
00:00:31,754 --> 00:00:36,788
interpreter do? Well, I'm gonna draw a
interpreter: n. 解释者；口译者；注释器

7
00:00:36,788 --> 00:00:42,874
picture here, this box is the interpreter,
interpreter: n. 解释者；口译者；注释器

8
00:00:42,874 --> 00:00:50,012

9
00:00:50,012 --> 00:00:56,822

10
00:00:56,822 --> 00:01:01,978
program before it executes it on the
executes: 执行（法令）

11
00:01:01,978 --> 00:01:07,339
you invoke the interpreter on the data,
invoke: vt. 调用；祈求；引起；恳求
interpreter: n. 解释者；口译者；注释器

12
00:01:07,339 --> 00:01:12,292

13
00:01:12,292 --> 00:01:17,992
interpreter is, is online, meaning it the
interpreter: n. 解释者；口译者；注释器

14
00:01:17,992 --> 00:01:24,119

15
00:01:24,119 --> 00:01:31,530

16
00:01:31,530 --> 00:01:39,035
produces an executable. And this
executable: adj. 可执行的；可实行的

17
00:01:39,035 --> 00:01:45,175
executable is another program, might be
executable: adj. 可执行的；可实行的
assembly language, it might be bytecode.
bytecode: n. 字节码，字节代码；位元码

18
00:01:45,402 --> 00:01:51,770

19
00:01:51,770 --> 00:02:02,948

20
00:02:02,948 --> 00:02:11,677

21
00:02:11,677 --> 00:02:16,348

22
00:02:16,348 --> 00:02:21,572
executable, and then we can run that same
executable: adj. 可执行的；可实行的
executable on many, many different inputs,
executable: adj. 可执行的；可实行的

23
00:02:21,572 --> 00:02:27,042
to recompile or do any other processing of
recompile: v. 重新编译

24
00:02:27,042 --> 00:02:32,358

25
00:02:32,358 --> 00:02:36,947
compilers and interpreters were first
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）

26
00:02:36,947 --> 00:02:41,778
1950s and in particular with a machine

27
00:02:41,778 --> 00:02:46,225
their first commercially successful
commercially: adv. 商业上；通商上

28
00:02:46,225 --> 00:02:51,525

29
00:02:51,525 --> 00:02:56,765
704 well, once customers started buying it

30
00:02:56,765 --> 00:03:01,578
software costs exceeded the hardware
exceeded: adj. 非常的；过度的；溢出的

31
00:03:01,578 --> 00:03:06,830

32
00:03:06,830 --> 00:03:12,295

33
00:03:12,295 --> 00:03:17,572

34
00:03:17,572 --> 00:03:22,533

35
00:03:22,533 --> 00:03:28,287

36
00:03:28,287 --> 00:03:36,588

37
00:03:36,588 --> 00:03:41,915

38
00:03:41,915 --> 00:03:46,956

39
00:03:46,956 --> 00:03:52,336
interpreter. And like all interpreters, it
interpreter: n. 解释者；口译者；注释器
interpreters: n. 解释器；直译程式；[计] 解释程序；口译者（interpreter的复数）
had some advantages and disadvantages. The
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）

40
00:03:52,336 --> 00:03:57,340

41
00:03:57,340 --> 00:04:01,782

42
00:04:01,782 --> 00:04:07,100
disadvantages, code written, speed code
disadvantages: n. 劣势；不利条件；损害（disadvantage的复数）
programs were ten to twenty times slower.
slower: adj. 较慢的；慢一点的（slow的比较级）

43
00:04:07,100 --> 00:04:12,208
Then handwritten programs and that's also
handwritten: adj. 手写的

44
00:04:12,208 --> 00:04:16,948
interpreter, they're going to be much
interpreter: n. 解释者；口译者；注释器

45
00:04:16,948 --> 00:04:22,119
slower than either a compiler or writing
slower: adj. 较慢的；慢一点的（slow的比较级）

46
00:04:22,119 --> 00:04:27,228
interpreter took up, 300 bytes of memory.
interpreter: n. 解释者；口译者；注释器

47
00:04:27,228 --> 00:04:32,336
incredibly tiny, program. But in those
incredibly: adv. 难以置信地；非常地

48
00:04:32,336 --> 00:04:38,854

49
00:04:38,854 --> 00:04:41,270

50
00:04:41,270 --> 00:04:46,780
amount of space that the interpreter took
interpreter: n. 解释者；口译者；注释器

51
00:04:46,780 --> 00:04:51,803

52
00:04:51,803 --> 00:04:56,889

53
00:04:56,889 --> 00:05:02,103
scientific computations, and programmers
computations: n. [数] 计算；计算指令（computation的复数形式）
thought in terms of writing down formulas
formulas: n. [数] 公式；配方；规则（formula的复数）

54
00:05:02,103 --> 00:05:07,267

55
00:05:07,267 --> 00:05:12,383
coding was that the formulas were in fact
formulas: n. [数] 公式；配方；规则（formula的复数）

56
00:05:12,383 --> 00:05:17,718
formulas were translated in to a form that
formulas: n. [数] 公式；配方；规则（formula的复数）

57
00:05:17,718 --> 00:05:25,044

58
00:05:25,044 --> 00:05:32,739

59
00:05:32,739 --> 00:05:39,426
1957, And interestingly, they thought it

60
00:05:39,426 --> 00:05:45,615

61
00:05:45,615 --> 00:05:51,659
at predicting how long software projects
predicting: v. 预测（predict的ing形式）；预报；预言

62
00:05:51,659 --> 00:05:57,047

63
00:05:57,047 --> 00:06:02,533

64
00:06:02,533 --> 00:06:07,497

65
00:06:07,497 --> 00:06:12,649
they were ecstatic, And everybody thought
ecstatic: adj. 狂喜的；入迷的

66
00:06:12,649 --> 00:06:16,984
abstraction, improved programmer
abstraction: n. 抽象；提取；抽象概念；空想；心不在焉

67
00:06:16,984 --> 00:06:23,484

68
00:06:23,484 --> 00:06:28,702

69
00:06:28,702 --> 00:06:33,736

70
00:06:33,736 --> 00:06:38,279

71
00:06:38,279 --> 00:06:42,527

72
00:06:42,527 --> 00:06:47,095
without having both a, a very good grasp
grasp: v. 抓牢，握紧；试图抓住；理解，领悟；毫不犹豫地抓住（机会）

73
00:06:47,095 --> 00:06:51,274

74
00:06:51,274 --> 00:06:55,620

75
00:06:55,620 --> 00:07:00,021
involves a very subtle and fruitful
fruitful: adj. 富有成效的；多产的；果实结得多的

76
00:07:00,021 --> 00:07:04,701

77
00:07:04,701 --> 00:07:09,797

78
00:07:09,797 --> 00:07:15,591
the development of, practical compilers.
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

79
00:07:15,591 --> 00:07:21,313
profound, that today, auto compilers still
profound: adj. 深厚的；意义深远的；渊博的
compilers: n. 编译器；编译程式；编译工具（compiler的复数形式）

80
00:07:21,313 --> 00:07:28,115
preserve the outlines of FORTRAN one. So
outlines: n. 轮廓；概要（outline的复数）；大概描述

81
00:07:28,115 --> 00:07:33,874
Well it consists five phases lexical
lexical: adj. 词汇的；[语] 词典的；词典编纂的
analysis and parsing, which together take
parsing: n. 语法分析；剖析

82
00:07:33,874 --> 00:07:39,065
care of the syntactic aspects of the
syntactic: adj. 句法的；语法的；依据造句法的
language, semantic analysis, which, of
semantic: adj. 语义的；语义学的（等于semantical）

83
00:07:39,065 --> 00:07:44,113
course, takes care of more semantic
semantic: adj. 语义的；语义学的（等于semantical）

84
00:07:44,113 --> 00:07:50,108
of transformations on the program to
transformations: n. [晶体] 转变（transformation的复数形式）；转换

85
00:07:50,108 --> 00:07:55,515

86
00:07:55,515 --> 00:08:00,923

87
00:08:00,923 --> 00:08:06,125

88
00:08:06,125 --> 00:08:11,327

89
00:08:11,327 --> 00:08:16,871

90
00:08:16,871 --> 00:08:18,720
